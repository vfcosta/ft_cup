//
// Generated file, do not edit! Created by opp_msgc 4.0 from Net.msg.
//

#ifndef _NET_M_H_
#define _NET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0400
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{ ... }} section:

#include <NetwPkt_m.h>
#include <NeighborDetector.h>
// end cplusplus



/**
 * Class generated from <tt>Net.msg</tt> by opp_msgc.
 * <pre>
 * message Net extends NetwPkt {
 *     fields:
 * 		int initiator;
 * 		NeighborDetector known;
 * 		NeighborDetector dest;
 * }
 * </pre>
 */
class Net : public NetwPkt
{
  protected:
    int initiator_var;
    NeighborDetector known_var;
    NeighborDetector dest_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Net&);

  public:
    Net(const char *name=NULL, int kind=0);
    Net(const Net& other);
    virtual ~Net();
    Net& operator=(const Net& other);
    virtual Net *dup() const {return new Net(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getInitiator() const;
    virtual void setInitiator(int initiator_var);
    virtual NeighborDetector& getKnown();
    virtual const NeighborDetector& getKnown() const {return const_cast<Net*>(this)->getKnown();}
    virtual void setKnown(const NeighborDetector& known_var);
    virtual NeighborDetector& getDest();
    virtual const NeighborDetector& getDest() const {return const_cast<Net*>(this)->getDest();}
    virtual void setDest(const NeighborDetector& dest_var);
};

inline void doPacking(cCommBuffer *b, Net& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Net& obj) {obj.parsimUnpack(b);}


#endif // _NET_M_H_
